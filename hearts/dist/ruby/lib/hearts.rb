#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'hearts_types'

module AgentVsAgent
  module Hearts
    class Client
      include ::Thrift::Client

      def start_agent()
        send_start_agent()
        return recv_start_agent()
      end

      def send_start_agent()
        send_message('start_agent', Start_agent_args)
      end

      def recv_start_agent()
        result = receive_message(Start_agent_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'start_agent failed: unknown result')
      end

      def get_hand(agent)
        send_get_hand(agent)
        return recv_get_hand()
      end

      def send_get_hand(agent)
        send_message('get_hand', Get_hand_args, :agent => agent)
      end

      def recv_get_hand()
        result = receive_message(Get_hand_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_hand failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_start_agent(seqid, iprot, oprot)
        args = read_args(iprot, Start_agent_args)
        result = Start_agent_result.new()
        result.success = @handler.start_agent()
        write_result(result, oprot, 'start_agent', seqid)
      end

      def process_get_hand(seqid, iprot, oprot)
        args = read_args(iprot, Get_hand_args)
        result = Get_hand_result.new()
        result.success = @handler.get_hand(args.agent)
        write_result(result, oprot, 'get_hand', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Start_agent_args
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Start_agent_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::AgentVsAgent::Agent}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Get_hand_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      AGENT = 1

      FIELDS = {
        AGENT => {:type => ::Thrift::Types::STRUCT, :name => 'agent', :class => ::AgentVsAgent::Agent}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Get_hand_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => ::AgentVsAgent::Card}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
