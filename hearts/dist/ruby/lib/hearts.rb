#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'hearts_types'

module Hearts
  class Client
    include ::Thrift::Client

    def get_game()
      send_get_game()
      return recv_get_game()
    end

    def send_get_game()
      send_message('get_game', Get_game_args)
    end

    def recv_get_game()
      result = receive_message(Get_game_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_game failed: unknown result')
    end

    def play_card(card)
      send_play_card(card)
      return recv_play_card()
    end

    def send_play_card(card)
      send_message('play_card', Play_card_args, :card => card)
    end

    def recv_play_card()
      result = receive_message(Play_card_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'play_card failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_get_game(seqid, iprot, oprot)
      args = read_args(iprot, Get_game_args)
      result = Get_game_result.new()
      result.success = @handler.get_game()
      write_result(result, oprot, 'get_game', seqid)
    end

    def process_play_card(seqid, iprot, oprot)
      args = read_args(iprot, Play_card_args)
      result = Play_card_result.new()
      result.success = @handler.play_card(args.card)
      write_result(result, oprot, 'play_card', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Get_game_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Get_game_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Play_card_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CARD = 1

    FIELDS = {
      CARD => {:type => ::Thrift::Types::STRUCT, :name => 'card', :class => ::Card}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Play_card_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

